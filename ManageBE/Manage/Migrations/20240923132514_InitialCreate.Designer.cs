// <auto-generated />
using System;
using Manage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Manage.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240923132514_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Manage.Models.CategoriaDocumenti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInserimentoCategoria")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescrizioneCategoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsPredefinita")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtenteId");

                    b.ToTable("CategoriaDocumenti");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataInserimentoCategoria = new DateTime(2024, 9, 23, 15, 25, 14, 402, DateTimeKind.Local).AddTicks(2296),
                            DescrizioneCategoria = "Descrizione categoria Predefinita 1",
                            IsPredefinita = true,
                            NomeCategoria = "Nome categoria Predefinita 1"
                        },
                        new
                        {
                            Id = 2,
                            DataInserimentoCategoria = new DateTime(2024, 9, 23, 15, 25, 14, 402, DateTimeKind.Local).AddTicks(2401),
                            DescrizioneCategoria = "Descrizione categoria Predefinita 2",
                            IsPredefinita = true,
                            NomeCategoria = "Nome categoria Predefinita 2"
                        });
                });

            modelBuilder.Entity("Manage.Models.Documenti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaDocumentiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCreazioneDocumento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInserimentoDocumento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaDocumentiId");

                    b.HasIndex("UtenteId");

                    b.ToTable("Documenti");
                });

            modelBuilder.Entity("Manage.Models.FileDocumenti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInserimentoFile")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DocumentiId")
                        .HasColumnType("int");

                    b.Property<string>("EstensioneFile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeFile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PercorsoFile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DocumentiId");

                    b.ToTable("FileDocumenti");
                });

            modelBuilder.Entity("Manage.Models.Utente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataInserimentoUtente")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("Manage.Models.CategoriaDocumenti", b =>
                {
                    b.HasOne("Manage.Models.Utente", "Utente")
                        .WithMany("CategorieDocumenti")
                        .HasForeignKey("UtenteId");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("Manage.Models.Documenti", b =>
                {
                    b.HasOne("Manage.Models.CategoriaDocumenti", "Categoria")
                        .WithMany("Documenti")
                        .HasForeignKey("CategoriaDocumentiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manage.Models.Utente", "Utente")
                        .WithMany("Documenti")
                        .HasForeignKey("UtenteId");

                    b.Navigation("Categoria");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("Manage.Models.FileDocumenti", b =>
                {
                    b.HasOne("Manage.Models.Documenti", "Documento")
                        .WithMany("FileDocumenti")
                        .HasForeignKey("DocumentiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Documento");
                });

            modelBuilder.Entity("Manage.Models.CategoriaDocumenti", b =>
                {
                    b.Navigation("Documenti");
                });

            modelBuilder.Entity("Manage.Models.Documenti", b =>
                {
                    b.Navigation("FileDocumenti");
                });

            modelBuilder.Entity("Manage.Models.Utente", b =>
                {
                    b.Navigation("CategorieDocumenti");

                    b.Navigation("Documenti");
                });
#pragma warning restore 612, 618
        }
    }
}
